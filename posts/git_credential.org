#+title: 2 factor authentication and git
#+author: Sachin
#+date: <2018-03-29>

Google's [[https://www.google.com/landing/2step/][2 Step Verification]] and GitHub's [[https://help.github.com/articles/about-two-factor-authentication/][2 Factor Authentication]] are
preferred & secured but they are quite confusing when using =git=. In
this post lets see how to setup those and configure =git= using
generated password/token to send patch using =git-send-email= & push
commit to remote server using =git-push=.

** Google's 2 Step Verification
   :PROPERTIES:
   :ID:       0de7133e-c1ea-4d5b-b330-5a1af8ce9128
   :END:

   Using this link
   [[https://security.google.com/settings/security/apppasswords][https://security.google.com/settings/security/apppasswords]] and
   setup App password. You need to login using your usual password
   first. After successful login, a section **Password & sign-in
   method** will show that your **2 Step Verification** is *Off*.
   Click the arrow to turn on 2 Step Verification as shown below.

   #+CAPTION: Enable 2 Step verification
   #+ATTR_HTML: :alt Enable 2 Step Verification :title Enable 2 Step verification :align center
   #+ATTR_HTML: :width 100% :height
   [[file:images/posts/git_credential/2StepVerification.png]]

   Next, you need to provide your phone number to receive a
   verification code. You can get the code using /Text message/ or a
   /Phone call/ as show below. Enter phone number and click /Next/.

   #+CAPTION: Enter Phone number
   #+ATTR_HTML: :alt Enter Phone number :title Enter Phone number :align center
   #+ATTR_HTML: :width 100% :height
   [[file:images/posts/git_credential/1-3.png]]

   Enter verification code and click /Next/.

   #+CAPTION: Enter verification code
   #+ATTR_HTML: :alt Enter verification code :title Enter verification code :align center
   #+ATTR_HTML: :width 100% :height
   [[file:images/posts/git_credential/2-3.png]]

   and click *TURN ON*

   #+CAPTION: Turn On 2 Step verification
   #+ATTR_HTML: :alt Turn On 2 Step verification :title Turn On 2 Step verification :align center
   #+ATTR_HTML: :width 100% :height
   [[file:images/posts/git_credential/3-3.png]]

   This is also a good time to have alternate backup option. I use
   [[https://play.google.com/store/apps/details?id=org.fedorahosted.freeotp][Free OTP]] but [[https://play.google.com/store/apps/details?id=com.google.android.apps.authenticator2][Google Authenticator]] is also good choice.

   #+CAPTION: Choose alternative application
   #+ATTR_HTML: :alt Choose alternative application :title Choose alternative application :align center
   #+ATTR_HTML: :width 100% :height
   [[file:images/posts/git_credential/G-AuthenticatorApp.png]]

   Next page will make you select the app and the device.

   #+CAPTION: Select app and device
   #+ATTR_HTML: :alt Select app and device :title Select app and device :align center
   #+ATTR_HTML: :width 100% :height
   [[file:images/posts/git_credential/select_app_select_device.png]]

   For sake of this post I want to use the token to send Email using
   =git-send-email=, I will select the app as *Mail*.

   #+CAPTION: Select app and device | App
   #+ATTR_HTML: :alt Select app and device :title Select app and device :align center
   #+ATTR_HTML: :width 100% :height
   [[file:images/posts/git_credential/select_app.png]]

   The device is nothing but my GNU/Linux system, I prefer to select
   *Other (Custom name)*.

   #+CAPTION: Select app and device | Device
   #+ATTR_HTML: :alt Select app and device :title Select app and device :align center
   #+ATTR_HTML: :width 100% :height
   [[file:images/posts/git_credential/select_device.png]]

   Name the app anything you want. As I plan to use the generated
   password for =git-send-email=, I prefer the same name. This also
   will help me to manage multiple apps in future. Click **GENERATE**
   to generate password.

   #+CAPTION: Generate password for an application
   #+ATTR_HTML: :alt Generate password for an application :title Generate password for an application :align center
   #+ATTR_HTML: :width 100% :height
   [[file:images/posts/git_credential/app_name.png]]

   A password is 16 characters. We need this password to send patches
   via =git=

   #+CAPTION: Generate app password
   #+ATTR_HTML: :alt Generate app password :title Generate app password :align center
   #+ATTR_HTML: :width 100% :height
   [[file:images/posts/git_credential/app_password.png]]

   Once the password is handy, create a file =~/git-credentials= with
   following line. Replace =<username>= with Gmail login name and
   =<16CharPassword>= with generated password. (/Note: This file is in
   plan text./)

   #+BEGIN_SRC sh
     smtp://<username>%40gmail.com:<16CharPassword>@smtp.gmail.com%3a587
   #+END_SRC

   Or store details in =~/.gitconfig=

   #+BEGIN_SRC sh
     [user]
	 name = <FirstName LastName>
	 email = <username>@gmail.com
     [sendemail]
	 smtpEncryption = tls
	 smtpServer = smtp.gmail.com
	 smtpUser = <username>@gmail.com
	 smtpPass = <16CharPassword>
	 smtpServerPort = 587
	 suppresscc = all
   #+END_SRC

   Or you can use [[https://git-scm.com/docs/git-credential-store][git credential helper store]] to store above details

   Test the settings by sending a patch,

   #+BEGIN_SRC sh
     git send-email --to=user@somedomain.com -1
   #+END_SRC

** GitHub's 2 Factor Authentication
   :PROPERTIES:
   :ID:       39550cd6-666c-4611-9fb7-0bfc16ab9181
   :END:

   Generate new token using this link
   [[https://github.com/settings/tokens][https://github.com/settings/tokens]] and click *Generate new token*
   as shown below,

   #+CAPTION: Generate GitHub token
   #+ATTR_HTML: :alt Generate GitHub token :title Generate GitHub token :align center
   #+ATTR_HTML: :width 100% :height
   [[file:images/posts/git_credential/generate-github-token.png]]

   and store the token in =~/.git-credentials= as below,

   #+BEGIN_SRC sh
     https://<GitHub username>:<GitHub Token>@github.com
   #+END_SRC

   Test the setting by pushing a commit.

   Each credential is stored on its own line in file
   =~/.git-credentials= file, something like,

   #+BEGIN_SRC sh
     smtp://<username>%40gmail.com:<16CharPassword>@smtp.gmail.com%3a587
     https://<GitHub username>:<GitHub Token>@github.com
   #+END_SRC

** Reference
   :PROPERTIES:
   :ID:       dfc1ea5d-92dd-4a63-829a-2b62a74feff2
   :END:
   1. [[https://git-scm.com/docs/git-send-email][git-send-email]]
   2. [[https://git-scm.com/docs/git-credential-store][git-credential-store]]
   3. [[https://gist.github.com/psachin/2c441d199bd2e7c015441238c8fe1c8b][GitHub Gist]]
